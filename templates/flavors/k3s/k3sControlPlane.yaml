---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KThreesControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: LinodeMachineTemplate
    name: ${CLUSTER_NAME}-control-plane
  kthreesConfigSpec:
    files:
      - path: /etc/rancher/k3s/config.yaml.d/capi-config.yaml
        owner: root:root
        content: |
          flannel-backend: none
          disable-network-policy: true
      - path: /var/lib/rancher/k3s/server/manifests/ccm-linode.yaml
        owner: root:root
        content: |-
          apiVersion: helm.cattle.io/v1
          kind: HelmChart
          metadata:
            namespace: kube-system
            name: ccm-linode
          spec:
            targetNamespace: kube-system
            version: ${LINODE_CCM_VERSION:=v0.4.4}
            chart: ccm-linode
            repo: https://linode.github.io/linode-cloud-controller-manager/
            bootstrap: true
            valuesContent: |-
              routeController:
                vpcName: ${VPC_NAME:=${CLUSTER_NAME}}
                clusterCIDR: 10.0.0.0/8
                configureCloudRoutes: true
              secretRef:
                name: "linode-token-region"
              nodeSelector:
                node-role.kubernetes.io/control-plane: "true"
      - path: /var/lib/rancher/k3s/server/manifests/linode-token-region.yaml
        owner: root:root
        contentFrom:
          secret:
            key:  linode-token-region.yaml
            name: linode-${CLUSTER_NAME}-crs-0
    serverConfig:
      disableComponents:
        - servicelb
        - traefik
    agentConfig:
      nodeName: '{{ ds.meta_data.label }}'
    preK3sCommands:
      - |
        echo "node-ip: $(ip a s eth1 |grep 'inet ' |cut -d' ' -f6|cut -d/ -f1)" >> /etc/rancher/k3s/config.yaml.d/capi-config.yaml
      - sed -i '/swap/d' /etc/fstab
      - swapoff -a
      - hostnamectl set-hostname '{{ ds.meta_data.label }}' && hostname -F /etc/hostname
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: ${KUBERNETES_VERSION}
