apiVersion: v1
kind: Secret
metadata:
  name: common-init-files
stringData:
  containerd-config.toml: |
    version = 2
    imports = ["/etc/containerd/conf.d/*.toml"]
    [plugins]
      [plugins."io.containerd.grpc.v1.cri"]
        sandbox_image = "registry.k8s.io/pause:3.9"
      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
        runtime_type = "io.containerd.runc.v2"
      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
        SystemdCgroup = true
  k8s-modules.conf: |
    overlay
    br_netfilter
  sysctl-k8s.conf: |
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1
  kubeadm-pre-init.sh: |
    #!/bin/bash
    set -euo pipefail
    export DEBIAN_FRONTEND=noninteractive
    hostnamectl set-hostname "$1" && hostname -F /etc/hostname
    mkdir -p -m 755 /etc/apt/keyrings
    PATCH_VERSION=$${2#[v]}
    VERSION=$${PATCH_VERSION%.*}
    curl -fsSL "https://pkgs.k8s.io/core:/stable:/v$VERSION/deb/Release.key" | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v$VERSION/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
    apt-get update -y
    apt-get install -y kubelet=$PATCH_VERSION* kubeadm=$PATCH_VERSION* kubectl=$PATCH_VERSION* containerd
    apt-mark hold kubelet kubeadm kubectl containerd
    modprobe overlay
    modprobe br_netfilter
    sysctl --system
    sed -i '/swap/d' /etc/fstab
    swapoff -a

