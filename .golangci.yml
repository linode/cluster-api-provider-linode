version: "2"
run:
  issues-exit-code: 1
output:
  formats:
    text:
      path: stdout
linters:
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - copyloopvar
    - cyclop
    - decorder
    - depguard
    - dogsled
    - dupword
    - durationcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - forbidigo
    - forcetypeassert
    - gocheckcompilerdirectives
    - gochecksumtype
    - gocognit
    - goconst
    - gocritic
    - goprintffuncname
    - gosec
    - gosmopolitan
    - loggercheck
    - maintidx
    - makezero
    - misspell
    - mnd
    - musttag
    - nestif
    - nilerr
    - nilnesserr
    - nilnil
    - noctx
    - nolintlint
    - paralleltest
    - prealloc
    - predeclared
    - protogetter
    - reassign
    - recvcheck
    - rowserrcheck
    - spancheck
    - sqlclosecheck
    - testifylint
    - thelper
    - unconvert
    - unparam
    - usestdlibvars
    - usetesting
    - varnamelen
    - whitespace
    - zerologlint
    - govet
    - ineffassign
    - unused
  settings:
    cyclop:
      max-complexity: 15
    depguard:
      rules:
        main:
          files:
            - $all
            - '!$test'
          deny:
            - pkg: reflect
              desc: Reflection is never clear.
            - pkg: gob
              desc: Please convert types manually
    dupl:
      threshold: 100
    errcheck:
      check-type-assertions: true
      check-blank: true
      exclude-functions:
        - fmt:.*
        - io/ioutil:^Read.*
    goconst:
      min-len: 3
      min-occurrences: 5
    gocritic:
      enabled-tags:
        - diagnostic
        - experimental
        - opinionated
        - performance
        - style
      settings:
        captLocal:
          paramsOnly: true
        rangeValCopy:
          sizeThreshold: 32
    lll:
      tab-width: 1
    nolintlint:
      require-explanation: true
      require-specific: true
    prealloc:
      simple: true
      range-loops: true
      for-loops: false
    unparam:
      check-exported: false
    varnamelen:
      min-name-length: 2
  exclusions:
    generated: lax
    rules:
      - linters:
          - copyloopvar
          - dupl
          - errcheck
          - gocyclo
          - gosec
          - maintidx
          - unparam
        path: _test(ing)?\.go
      - linters:
          - dupl
        path: _conversion\.go
      - linters:
          - gocritic
        path: _test\.go
        text: (unnamedResult|exitAfterDefer)
      - linters:
          - gocritic
        text: '(hugeParam|rangeValCopy):'
      - linters:
          - staticcheck
        text: 'SA3000:'
      - linters:
          - gosec
        text: 'G101:'
      - linters:
          - gosec
        text: 'G104:'
    paths:
      - zz_generated\..+\.go$
      - third_party$
      - builtin$
      - examples$
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false
formatters:
  enable:
    - gci
    - gofmt
    - goimports
  settings:
    gci:
      sections:
        - standard
        - default
        - blank
        - dot
        - prefix(github.com/linode/cluster-api-provider-linode)
    gofmt:
      simplify: true
    goimports:
      local-prefixes:
        - github.com/linode/cluster-api-provider-linode
  exclusions:
    generated: lax
    paths:
      - zz_generated\..+\.go$
      - third_party$
      - builtin$
      - examples$
      - cmd/main.go
      - internal/controller/suite_test.go
      - internal/webhook/v1alpha2/webhook_suite_test.go
      - controller/.*_controller_test.go
