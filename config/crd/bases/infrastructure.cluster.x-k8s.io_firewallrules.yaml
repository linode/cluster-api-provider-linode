---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  labels:
    clusterctl.cluster.x-k8s.io/move-hierarchy: "true"
  name: firewallrules.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: FirewallRule
    listKind: FirewallRuleList
    plural: firewallrules
    shortNames:
    - fwr
    singular: firewallrule
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: FirewallRule is the Schema for the firewallrules API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec is the desired state of the FirewallRule.
            properties:
              action:
                description: action is the action to take when the rule matches.
                type: string
              addressSetRefs:
                description: |-
                  addressSetRefs is a list of references to AddressSets as an alternative to
                  using Addresses but can be used in conjunction with it.
                items:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              addresses:
                description: addresses is a list of addresses to apply the rule to.
                properties:
                  ipv4:
                    description: ipv4 defines a list of IPv4 address strings.
                    items:
                      type: string
                    type: array
                  ipv6:
                    description: ipv6 defines a list of IPv6 address strings.
                    items:
                      type: string
                    type: array
                type: object
              description:
                description: description is the description of the rule.
                type: string
              label:
                description: label is the label of the rule.
                type: string
              ports:
                description: ports is the ports to apply the rule to.
                type: string
              protocol:
                description: protocol is the protocol to apply the rule to.
                enum:
                - TCP
                - UDP
                - ICMP
                - IPENCAP
                type: string
            required:
            - action
            - label
            - protocol
            type: object
          status:
            description: status is the observed state of the FirewallRule.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
