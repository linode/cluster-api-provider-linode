---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  labels:
    clusterctl.cluster.x-k8s.io/move-hierarchy: "true"
  name: linodevpcs.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: LinodeVPC
    listKind: LinodeVPCList
    plural: linodevpcs
    shortNames:
    - lvpc
    singular: linodevpc
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: VPC is ready
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: LinodeVPC is the Schema for the linodemachines API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LinodeVPCSpec defines the desired state of LinodeVPC
            properties:
              credentialsRef:
                description: |-
                  CredentialsRef is a reference to a Secret that contains the credentials to use for provisioning this VPC. If not
                  supplied then the credentials of the controller will be used.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              description:
                type: string
              ipv6:
                description: |-
                  IPv6 is a list of IPv6 ranges allocated to the VPC.
                  Once ranges are allocated based on the IPv6Range field, they will be
                  added to this field.
                items:
                  description: VPCIPv6Range represents a single IPv6 range assigned
                    to a VPC.
                  properties:
                    range:
                      type: string
                  required:
                  - range
                  type: object
                type: array
              ipv6Range:
                description: |-
                  IPv6Range is a list of IPv6 ranges to allocate to the VPC.
                  If not specified, the VPC will not have an IPv6 range allocated.
                  Once ranges are allocated, they will be added to the IPv6 field.
                items:
                  description: |-
                    VPCCreateOptionsIPv6 defines the options for creating an IPv6 range in a VPC.
                    It's copied from linodego.VPCCreateOptionsIPv6 and should be kept in sync.
                    Values supported by the linode API should be used here.
                    See https://techdocs.akamai.com/linode-api/reference/post-vpc for more details.
                  properties:
                    allocation_class:
                      description: IPv6 inventory from which the VPC prefix should
                        be allocated.
                      type: string
                    range:
                      description: Range is the IPv6 prefix for the VPC.
                      type: string
                  type: object
                type: array
              region:
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              retain:
                default: false
                description: |-
                  Retain allows you to keep the VPC after the LinodeVPC object is deleted.
                  This is useful if you want to use an existing VPC that was not created by this controller.
                  If set to true, the controller will not delete the VPC resource in Linode.
                  Defaults to false.
                type: boolean
              subnets:
                items:
                  description: VPCSubnetCreateOptions defines subnet options
                  properties:
                    ipv4:
                      type: string
                    ipv6:
                      description: |-
                        IPv6 is a list of IPv6 ranges allocated to the subnet.
                        Once ranges are allocated based on the IPv6Range field, they will be
                        added to this field.
                      items:
                        description: VPCIPv6Range represents a single IPv6 range assigned
                          to a VPC.
                        properties:
                          range:
                            type: string
                        required:
                        - range
                        type: object
                      type: array
                    ipv6Range:
                      description: |-
                        IPv6Range is a list of IPv6 ranges to allocate to the subnet.
                        If not specified, the subnet will not have an IPv6 range allocated.
                        Once ranges are allocated, they will be added to the IPv6 field.
                      items:
                        description: |-
                          VPCSubnetCreateOptionsIPv6 defines the options for creating an IPv6 range in a VPC subnet.
                          It's copied from linodego.VPCSubnetCreateOptionsIPv6 and should be kept in sync.
                          Values supported by the linode API should be used here.
                          See https://techdocs.akamai.com/linode-api/reference/post-vpc-subnet for more details.
                        properties:
                          range:
                            type: string
                        type: object
                      type: array
                    label:
                      maxLength: 63
                      minLength: 3
                      type: string
                    retain:
                      default: false
                      description: |-
                        Retain allows you to keep the Subnet after the LinodeVPC object is deleted.
                        This is only applicable when the parent VPC has retain set to true.
                      type: boolean
                    subnetID:
                      description: SubnetID is subnet id for the subnet
                      type: integer
                  type: object
                type: array
              vpcID:
                type: integer
            required:
            - region
            type: object
          status:
            description: LinodeVPCStatus defines the observed state of LinodeVPC
            properties:
              conditions:
                description: Conditions defines current service state of the LinodeVPC.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the VPC and will contain a more verbose string suitable
                  for logging and human consumption.

                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the VPC's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.

                  Any transient errors that occur during the reconciliation of VPCs
                  can be added as events to the VPC object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the VPC and will contain a succinct value suitable
                  for machine interpretation.

                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the VPC's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.

                  Any transient errors that occur during the reconciliation of VPCs
                  can be added as events to the VPC object and/or logged in the
                  controller's output.
                type: string
              ready:
                default: false
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
