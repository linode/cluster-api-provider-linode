---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: linodevpcs.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: LinodeVPC
    listKind: LinodeVPCList
    plural: linodevpcs
    singular: linodevpc
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LinodeVPC is the Schema for the linodemachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LinodeVPCSpec defines the desired state of LinodeVPC
            properties:
              description:
                type: string
              label:
                maxLength: 63
                minLength: 3
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              region:
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              subnets:
                items:
                  description: VPCSubnetCreateOptions defines subnet options
                  properties:
                    ipv4:
                      type: string
                    label:
                      maxLength: 63
                      minLength: 3
                      type: string
                  type: object
                type: array
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              vpcID:
                type: integer
            required:
            - region
            type: object
          status:
            description: LinodeVPCStatus defines the observed state of LinodeVPC
            properties:
              conditions:
                description: Conditions defines current service state of the LinodeVPC.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the VPC and will contain a more verbose
                  string suitable for logging and human consumption. \n This field
                  should not be set for transitive errors that a controller faces
                  that are expected to be fixed automatically over time (like service
                  outages), but instead indicate that something is fundamentally wrong
                  with the VPC's spec or the configuration of the controller, and
                  that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of VPCs can be added as events to
                  the VPC object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the VPC and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the VPC's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of VPCs can be added as events to the
                  VPC object and/or logged in the controller's output."
                type: string
              ready:
                default: false
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
