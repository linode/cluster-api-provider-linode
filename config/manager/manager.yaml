apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: namespace
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cluster-api-provider-linode
    app.kubernetes.io/part-of: cluster-api-provider-linode
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cluster-api-provider-linode
    app.kubernetes.io/part-of: cluster-api-provider-linode
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - command:
            - /manager
          args:
            - --leader-elect
          image: controller:latest
          env:
            - name: LINODE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: capl-manager-credentials
                  key: LINODE_TOKEN
            - name: LINODE_DNS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: capl-manager-credentials
                  key: LINODE_DNS_TOKEN
            - name: AKAMAI_HOST
              valueFrom:
                secretKeyRef:
                  key: AKAMAI_HOST
                  name: akamai-edgerc-secret
            - name: AKAMAI_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  key: AKAMAI_ACCESS_TOKEN
                  name: akamai-edgerc-secret
            - name: AKAMAI_CLIENT_TOKEN
              valueFrom:
                secretKeyRef:
                  key: AKAMAI_CLIENT_TOKEN
                  name: akamai-edgerc-secret
            - name: AKAMAI_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: AKAMAI_CLIENT_SECRET
                  name: akamai-edgerc-secret
            - name: LINODE_API_VERSION
              value: v4beta
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          name: manager
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsUser: 65532
            runAsGroup: 65532
            capabilities:
              drop:
                - "ALL"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 1000m
              memory: 512Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
