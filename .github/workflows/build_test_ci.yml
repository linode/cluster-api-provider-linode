name: Coverage and E2E

on:
  push:
    branches:
      - main
  pull_request_target:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read
  actions: read

concurrency:
  group: build-test-ci-${{ github.event.pull_request.number || github.ref_name }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'src' output variable
      paths: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: .github/filters.yml

  go-build-test:
    environment: ${{ github.event.pull_request.head.repo.fork == true && 'prod-external' || 'prod' }}
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ contains(fromJSON(needs.changes.outputs.paths), 'src') }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            golang.org:443
            proxy.golang.org:443
            sum.golang.org:443
            objects.githubusercontent.com:443
            storage.googleapis.com:443
            cli.codecov.io:443
            api.codecov.io:443
            ingest.codecov.io:443
            raw.githubusercontent.com:443

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Test
        run: make test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.out
          fail_ci_if_error: false
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: linode/cluster-api-provider-linode

  e2e-test:
    needs: changes
    strategy:
      fail-fast: false
      matrix:
        flavor: ${{ fromJSON(needs.changes.outputs.paths) }}
        exclude:
          - flavor: src
        include:
          - flavor: ${{ github.event.pull_request.number && 'quick' || 'all' }}
    uses: ./.github/workflows/e2e-test.yaml
    secrets: inherit
    with:
      environment: ${{ github.event.pull_request.head.repo.fork == true && 'prod-external' || 'prod' }}
      e2e-selector: ${{ matrix.flavor }}
      e2e-flags: ${{ matrix.flavor == 'quick' && ''  || '--assert-timeout 20m0s'}}
