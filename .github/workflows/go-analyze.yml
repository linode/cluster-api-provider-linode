name: Go Analyze

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'src' output variable
      src: ${{ steps.filter.outputs.src }}
    steps:
      - uses: actions/checkout@v4
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          predicate-quantifier: 'every'
          filters: .github/filters.yml
  go-analyze:
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.src == 'true' }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            proxy.golang.org:443
            sum.golang.org:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            auth.docker.io:443
            production.cloudflare.docker.com:443
            vuln.go.dev:443
            storage.googleapis.com:443
            golangci-lint.run:443

      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true
          cache: false

      - name: lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

      - name: Nilcheck
        run: make nilcheck
