# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: deprecated-secret
  # Label to trigger the test on every PR
  labels:
    all:
    quick:
    linodeobjkey:
    linodeobjkeysecretdep:
spec:
  bindings:
    # A short identifier for the E2E test run
    - name: run
      value: (join('-', ['e2e', 'deprecated-secret', env('GIT_REF')]))
    - name: key
      # Format the key name into a valid Kubernetes object name
      # TODO: This is over-truncated to account for the Kubernetes access key Secret
      value: (trim((truncate(($run), `52`)), '-'))
    - name: access_key_secret
      value: (join('-', [($key), 'custom']))
  template: true
  steps:
    - name: Check if CAPI provider resources exist
      try:
        - assert:
            file: assert-capi-resources.yaml
    - name: Create bucket
      try:
        - script:
            env:
              - name: URI
                value: object-storage/buckets
              - name: BUCKET_LABEL
                value: ($key)
            content: |
              set -e
              
              curl -s \
                -X POST \
                -H "Authorization: Bearer $LINODE_TOKEN" \
                -H "Content-Type: application/json" \
                -d "{\"label\":\"$BUCKET_LABEL\",\"region\":\"us-sea\"}" \
                "https://api.linode.com/v4/$URI"
            check:
              ($error): ~
    - name: Create LinodeObjectStorageKey
      try:
        - apply:
            file: create-linodeobjectstoragekey.yaml
        - assert:
            file: assert-key-and-secret.yaml
      catch:
        - describe:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
            kind: LinodeObjectStorageKey
        - describe:
            apiVersion: v1
            kind: Secret
            namespace: default
    - name: Ensure the access key was created
      try:
        - script:
            env:
              - name: URI
                value: object-storage/keys
              - name: OBJ_KEY
                value: ($key)
            content: |
              set -e

              export KEY_ID=$(kubectl -n $NAMESPACE get lobjkey $OBJ_KEY -ojson | jq '.status.accessKeyRef')
              
              curl -s \
                -H "Authorization: Bearer $LINODE_TOKEN" \
                -H "Content-Type: application/json" \
                "https://api.linode.com/v4/$URI/$KEY_ID"
            check:
              ($error): ~
    - name: Delete LinodeObjectStorageKey
      try:
        - delete:
            ref:
              apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
              kind: LinodeObjectStorageKey
              name: ($key)
    - name: Check if the LinodeObjectStorageKey and Secret were deleted
      try:
        - error:
            file: check-key-and-secret-deletion.yaml
    - name: Delete bucket
      try:
        - script:
            env:
              - name: URI
                value: object-storage/buckets/us-sea
              - name: BUCKET_LABEL
                value: ($key)
            content: |
              set -e
              
              curl -s \
                -X DELETE \
                -H "Authorization: Bearer $LINODE_TOKEN" \
                "https://api.linode.com/v4/$URI/$BUCKET_LABEL"
            check:
              ($error): ~