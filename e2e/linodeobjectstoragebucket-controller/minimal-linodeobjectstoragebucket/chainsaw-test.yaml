# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: minimal-linodeobjectstoragebucket
  # Label to trigger the test on every PR
  labels:
    all:
    quick:
    linodeobj:
spec:
  bindings:
    # A short identifier for the E2E test run
    - name: run
      value: (join('-', ['e2e', 'min-obj', env('GIT_REF')]))
    - name: bucket
      # Format the bucket name into a valid Kubernetes object name
      # TODO: This is over-truncated to account for the Kubernetes access key Secret
      value: (trim((truncate(($run), `52`)), '-'))
  template: true
  steps:
    - name: Check if CAPI provider resources exist
      try:
        - assert:
            file: assert-capi-resources.yaml
    - name: Create LinodeObjectStorageBucket
      try:
        - apply:
            file: create-linodeobjectstoragebucket.yaml
        - assert:
            file: assert-obj.yaml
      catch:
        - describe:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
            kind: LinodeObjectStorageBucket
    - name: Check if the bucket was created
      try:
        - script:
            env:
              - name: BUCKET
                value: ($bucket)
            content: |
              set -e
              curl -s \
                -H "Authorization: Bearer $LINODE_TOKEN" \
                -H "Content-Type: application/json" \
                "https://api.linode.com/v4/object-storage/buckets/us-sea-1/$BUCKET"
            check:
              ($error): ~
              (json_parse($stdout)):
                label: ($bucket)
    - name: Delete LinodeObjectStorageBucket
      try:
        - delete:
            ref:
              apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
              kind: LinodeObjectStorageBucket
              name: ($bucket)
        - script:
            env:
              - name: BUCKET
                value: ($bucket)
            content: |
              set -e
              curl -s \
                -H "Authorization: Bearer $LINODE_TOKEN" \
                -X DELETE \
                "https://api.linode.com/v4/object-storage/buckets/us-sea/$BUCKET"
            check:
              ($error): ~
    - name: Check if the LinodeObjectStorageBucket was deleted
      try:
        - error:
            file: check-obj-deletion.yaml
